
services:       # Define the services (containers) that will run
  db_mysql:     # Name of the service (container will be named something like <project>_db-MySQL)
    image: mysql:8.0  # Use the official MySQL 8.0 image from Docker Hub
    
    environment:      
      # Instead of putting the password directly in plain text,
      # we use *_FILE variables supported by the MySQL image.
      # The container will read the password from the secret file mounted at /run/secrets/mysql_root_password
      MYSQL_DATABASE: BCSL
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      
    ports:
      - "3306:3306"  # Map port 3306 on your host machine to port 3306 inside the container
                     # This allows external tools (like VS Code, MySQL Workbench) to connect to the database
    
    volumes:
      - db_mysql_data:/var/lib/mysql  # Store MySQL data in a Docker volume, so data persists
                                      # even if the container is deleted/restarted
    
    secrets:
      - mysql_root_password     # Attach the defined secret into this service
                                # (the secret will be mounted inside /run/secrets/)
    
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s   # How often to run the healthcheck.
      timeout: 5s    # How long to wait before considering the check failed.
      retries: 3


  bcsl_api:
    build:
      context: ..
      dockerfile: Database_Services/Config/Dockerfile
    env_file:
      - ../Database_Services/Config/.env
    depends_on:
      db_mysql:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: >
      bash -c "
        python -m Database.Database_Setup &&
        python -m Database.Database_Initialization &&
        uvicorn main:app --host 0.0.0.0 --port 8000 --reload
      "
    secrets:
      - source: db_username
        target: /app/Secrets/db_username.txt
      - source: db_password
        target: /app/Secrets/db_password.txt

    restart: always
    # Optional: keep logs visible
    tty: true
    stdin_open: true



volumes:
  db_mysql_data:  # Define the named volume "db_mysql_data"
                  # Docker will create and manage this volume on your host system

                  

secrets:
  mysql_root_password:
    file: ../MySQL_Server/Secrets/mysql_root_password.txt  # Use forward slashes, not backslashes
                                                   # Its contents will be available at /run/secrets/mysql_root_password inside the container
  db_username:
    file: ../Database_Services/Secrets/db_username.txt
  db_password:
    file: ../Database_Services/Secrets/db_password.txt







